{"version":3,"file":"index.es.js","sources":["../index.ts"],"sourcesContent":["const ONESIGNAL_SDK_ID = 'onesignal-sdk';\nconst ONE_SIGNAL_SCRIPT_SRC =\n  'https://cdn.onesignal.com/sdks/web/v16/OneSignalSDK.page.js';\n\n// true if the script is successfully loaded from CDN.\nlet isOneSignalInitialized = false;\n// true if the script fails to load from CDN. A separate flag is necessary\n// to disambiguate between a CDN load failure and a delayed call to\n// OneSignal#init.\nlet isOneSignalScriptFailed = false;\n\nif (typeof window !== 'undefined') {\n  window.OneSignalDeferred = window.OneSignalDeferred || [];\n  addSDKScript();\n}\n\ndeclare global {\n  interface Window {\n    OneSignalDeferred?: OneSignalDeferredLoadedCallback[];\n    OneSignal?: IOneSignalOneSignal;\n    safari?: {\n      pushNotification: any;\n    };\n  }\n}\n\n/* H E L P E R S */\n\nfunction handleOnError() {\n  isOneSignalScriptFailed = true;\n}\n\nfunction addSDKScript() {\n  const script = document.createElement('script');\n  script.id = ONESIGNAL_SDK_ID;\n  script.defer = true;\n  script.src = ONE_SIGNAL_SCRIPT_SRC;\n\n  // Always resolve whether or not the script is successfully initialized.\n  // This is important for users who may block cdn.onesignal.com w/ adblock.\n  script.onerror = () => {\n    handleOnError();\n  };\n\n  document.head.appendChild(script);\n}\n\n/**\n * The following code is copied directly from the native SDK source file BrowserSupportsPush.ts\n * S T A R T\n */\n\n// Checks if the browser supports push notifications by checking if specific\n//   classes and properties on them exist\nfunction isPushNotificationsSupported() {\n  return supportsVapidPush() || supportsSafariPush();\n}\n\nfunction isMacOSSafariInIframe(): boolean {\n  // Fallback detection for Safari on macOS in an iframe context\n  return (\n    window.top !== window && // isContextIframe\n    navigator.vendor === 'Apple Computer, Inc.' && // isSafari\n    navigator.platform === 'MacIntel'\n  ); // isMacOS\n}\n\nfunction supportsSafariPush(): boolean {\n  return (\n    (window.safari && typeof window.safari.pushNotification !== 'undefined') ||\n    isMacOSSafariInIframe()\n  );\n}\n\n// Does the browser support the standard Push API\nfunction supportsVapidPush(): boolean {\n  return (\n    typeof PushSubscriptionOptions !== 'undefined' &&\n    PushSubscriptionOptions.prototype.hasOwnProperty('applicationServerKey')\n  );\n}\n/* E N D */\n\n/**\n * This is a SPECIAL FUNCTION\n * It is a hardcoded implementation copied from the upstream/native WebSDK since we want to return a boolean immediately\n * Natively, this is done via the shimloading mechanism (i.e. if the SDK loads, push is supported)\n * @PublicApi\n */\nconst isPushSupported = (): boolean => {\n  return isPushNotificationsSupported();\n};\n\n/**\n * @PublicApi\n */\nconst init = (options: IInitObject): Promise<void> => {\n  if (isOneSignalInitialized) {\n    return Promise.reject(`OneSignal is already initialized.`);\n  }\n\n  if (!options || !options.appId) {\n    return Promise.reject('You need to provide your OneSignal appId.');\n  }\n\n  if (!document) {\n    return Promise.reject(`Document is not defined.`);\n  }\n\n  return new Promise<void>((resolve, reject) => {\n    window.OneSignalDeferred?.push((OneSignal) => {\n      OneSignal.init(options)\n        .then(() => {\n          isOneSignalInitialized = true;\n          resolve();\n        })\n        .catch(reject);\n    });\n  });\n};\n\nexport interface AutoPromptOptions { force?: boolean; forceSlidedownOverNative?: boolean; slidedownPromptOptions?: IOneSignalAutoPromptOptions; }\nexport interface IOneSignalAutoPromptOptions { force?: boolean; forceSlidedownOverNative?: boolean; isInUpdateMode?: boolean; categoryOptions?: IOneSignalCategories; }\nexport interface IOneSignalCategories { positiveUpdateButton: string; negativeUpdateButton: string; savingButtonText: string; errorButtonText: string; updateMessage: string; tags: IOneSignalTagCategory[]; }\nexport interface IOneSignalTagCategory { tag: string; label: string; checked?: boolean; }\nexport type PushSubscriptionNamespaceProperties = { id: string | null | undefined; token: string | null | undefined; optedIn: boolean; };\nexport type SubscriptionChangeEvent = { previous: PushSubscriptionNamespaceProperties; current: PushSubscriptionNamespaceProperties; };\nexport type NotificationEventName = 'click' | 'foregroundWillDisplay' | 'dismiss' | 'permissionChange' | 'permissionPromptDisplay';\nexport type SlidedownEventName = 'slidedownAllowClick' | 'slidedownCancelClick' | 'slidedownClosed' | 'slidedownQueued' | 'slidedownShown';\nexport type OneSignalDeferredLoadedCallback = (onesignal: IOneSignalOneSignal) => void;\nexport interface IOSNotification {\n  /**\n   * The OneSignal notification id;\n   *  - Primary id on OneSignal's REST API and dashboard\n   */\n  readonly notificationId: string;\n\n  /**\n   * Visible title text on the notification\n   */\n  readonly title?: string;\n\n  /**\n   * Visible body text on the notification\n   */\n  readonly body: string;\n\n  /**\n   * Visible icon the notification; URL format\n   */\n  readonly icon?: string;\n\n  /**\n   * Visible small badgeIcon that displays on some devices; URL format\n   * Example: On Android's status bar\n   */\n  readonly badgeIcon?: string;\n\n  /**\n   * Visible image on the notification; URL format\n   */\n  readonly image?: string;\n\n  /**\n   * Visible buttons on the notification\n   */\n  readonly actionButtons?: IOSNotificationActionButton[];\n\n  /**\n   * If this value is the same as existing notification, it will replace it\n   * Can be set when creating the notification with \"Web Push Topic\" on the dashboard\n   * or web_push_topic from the REST API.\n   */\n  readonly topic?: string;\n\n  /**\n   * Custom object that was sent with the notification;\n   * definable when creating the notification from the OneSignal REST API or dashboard\n   */\n  readonly additionalData?: object;\n\n  /**\n   * URL to open when clicking or tapping on the notification\n   */\n  readonly launchURL?: string;\n\n  /**\n   * Confirm the push was received by reporting back to OneSignal\n   */\n  readonly confirmDelivery: boolean;\n}\n\nexport interface IOSNotificationActionButton {\n  /**\n   * Any unique identifier to represent which button was clicked. This is typically passed back to the service worker\n   * and host page through events to identify which button was clicked.\n   * e.g. 'like-button'\n   */\n  readonly actionId: string;\n  /**\n   * The notification action button's text.\n   */\n  readonly text: string;\n  /**\n   * A valid publicly reachable HTTPS URL to an image.\n   */\n  readonly icon?: string;\n  /**\n   * The URL to open the web browser to when this action button is clicked.\n   */\n  readonly launchURL?: string;\n}\n\nexport interface NotificationClickResult {\n  readonly actionId?: string;\n  readonly url?: string;\n}\n\nexport type NotificationEventTypeMap = {\n  'click': NotificationClickEvent;\n  'foregroundWillDisplay': NotificationForegroundWillDisplayEvent;\n  'dismiss': NotificationDismissEvent;\n  'permissionChange': boolean;\n  'permissionPromptDisplay': void;\n};\n\nexport interface NotificationForegroundWillDisplayEvent {\n  readonly notification: IOSNotification;\n  preventDefault(): void;\n}\n\nexport interface NotificationDismissEvent {\n  notification: IOSNotification;\n}\n\nexport interface NotificationClickEvent {\n  readonly notification: IOSNotification;\n  readonly result: NotificationClickResult;\n}\n\nexport type UserChangeEvent = {\n  current: UserNamespaceProperties;\n};\nexport type UserNamespaceProperties = {\n  onesignalId: string | undefined;\n  externalId: string | undefined;\n};\n\nexport interface IInitObject {\n  appId: string;\n  subdomainName?: string;\n  requiresUserPrivacyConsent?: boolean;\n  promptOptions?: {\n    slidedown: {\n      prompts: {\n        /**\n         * Whether to automatically display the prompt.\n         * `true` will display the prompt based on the delay options.\n         * `false` will prevent the prompt from displaying until the Slidedowns methods are used.\n         */\n        autoPrompt: boolean;\n\n        /**\n         * Only available for type: category. Up to 10 categories.\n         * @example\n         *  categories: [{ tag: 'local_news', label: 'Local News' }] // The user will be tagged with local_news but will see \"Local News\" in the prompt.\n         */\n        categories: {\n          /** Should identify the action. */\n          tag: string;\n\n          /** What the user will see. */\n          label: string;\n        }[];\n\n        /**\n         * The delay options for the prompt.\n         * @example delay: { pageViews: 3, timeDelay: 20 } // The user will not be shown the prompt until 20 seconds after the 3rd page view.\n         */\n        delay: {\n          /** The number of pages a user needs to visit before the prompt is displayed. */\n          pageViews?: number;\n\n          /** The number of seconds a user needs to wait before the prompt is displayed.Both options must be satisfied for the prompt to display */\n          timeDelay?: number;\n        };\n\n        /**\n         * The text to display in the prompt.\n         */\n        text?: {\n          /** The callout asking the user to opt-in. Up to 90 characters. */\n          actionMessage?: string;\n\n          /** Triggers the opt-in. Up to 15 characters. */\n          acceptButton?: string;\n\n          /** Cancels opt-in. Up to 15 characters. */\n          cancelMessage?: string;\n\n          /** The message of the confirmation prompt displayed after the email and/or phone number is provided. Up to 90 characters. */\n          confirmMessage?: string;\n\n          /** Identifies the email text field. Up to 15 characters. */\n          emailLabel?: string;\n\n          /** Cancels the category update. Up to 15 characters. */\n          negativeUpdateButton?: string;\n\n          /** Saves the updated category tags. Up to 15 characters. */\n          positiveUpdateButton?: string;\n\n          /** Identifies the phone number text field. Up to 15 characters. */\n          smsLabel?: string;\n\n          /** A different message shown to subscribers presented the prompt again to update categories. Up to 90 characters. */\n          updateMessage?: string;\n        };\n\n        /**\n         * The type of prompt to display.\n         * `push` which is the Slide Prompt without categories.\n         * `category` which is the Slide Prompt with categories.\n         * `sms` only asks for phone number.\n         * `email` only asks for email address.\n         * `smsAndEmail` asks for both phone number and email address.\n         */\n        type: 'push' | 'category' | 'sms' | 'email' | 'smsAndEmail';\n      }[];\n    };\n  };\n  welcomeNotification?: {\n    /**\n     * Disables sending a welcome notification to new site visitors. If you want to disable welcome notifications, this is the only option you need.\n     */\n    disabled?: boolean;\n\n    /**\n     * The welcome notification's message. You can localize this to your own language.\n     * If left blank or set to blank, the default of 'Thanks for subscribing!' will be used.\n     */\n    message: string;\n\n    /**\n     * The welcome notification's title. You can localize this to your own language. If not set, or left blank, the site's title will be used.\n     * Set to one space ' ' to clear the title, although this is not recommended.\n     */\n    title?: string;\n\n    /**\n     * By default, clicking the welcome notification does not open any link.\n     * This is recommended because the user has just visited your site and subscribed.\n     */\n    url: string;\n  };\n\n  /**\n   * Will enable customization of the notify/subscription bell button.\n   */\n  notifyButton?: {\n    /**\n     * A function you define that returns true to show the Subscription Bell, or false to hide it.\n     * Typically used the hide the Subscription Bell after the user is subscribed.\n     * This function is not re-evaluated on every state change; this function is only evaluated once when the Subscription Bell begins to show.\n     */\n    displayPredicate?: () => boolean | Promise<boolean>;\n\n    /**\n     * Enable the Subscription Bell. The Subscription Bell is otherwise disabled by default.\n     */\n    enable?: boolean;\n\n    /** Specify CSS-valid pixel offsets using bottom, left, and right. */\n    offset?: { bottom: string; left: string; right: string };\n\n    /**\n     * If `true`, the Subscription Bell will display an icon that there is 1 unread message.\n     * When hovering over the Subscription Bell, the user will see custom text set by message.prenotify.\n     */\n    prenotify: boolean;\n\n    /** Either `bottom-left` or `bottom-right`. The Subscription Bell will be fixed at this location on your page. */\n    position?: 'bottom-left' | 'bottom-right';\n\n    /**  Set `false` to hide the 'Powered by OneSignal' text in the Subscription Bell dialog popup. */\n    showCredit: boolean;\n\n    /**\n     * The Subscription Bell will initially appear at one of these sizes, and then shrink down to size `small` after the user subscribes.\n     */\n    size?: 'small' | 'medium' | 'large';\n\n    /** Customize the Subscription Bell text. */\n    text: {\n      'dialog.blocked.message': string;\n      'dialog.blocked.title': string;\n      'dialog.main.button.subscribe': string;\n      'dialog.main.button.unsubscribe': string;\n      'dialog.main.title': string;\n      'message.action.resubscribed': string;\n      'message.action.subscribed': string;\n      'message.action.subscribing': string;\n      'message.action.unsubscribed': string;\n      'message.prenotify': string;\n      'tip.state.blocked': string;\n      'tip.state.subscribed': string;\n      'tip.state.unsubscribed': string;\n    };\n  };\n\n  persistNotification?: boolean;\n  webhooks?: {\n    /**\n     * Enable this setting only if your server has CORS enabled and supports non-simple CORS requests.\n     * If this setting is disabled, your webhook will not need CORS to receive data, but it will not receive the custom headers.\n     * The simplest option is to leave it disabled.\n     * @default false\n     */\n    cors: boolean;\n\n    /**\n     * This event occurs after a notification is clicked.\n     * @example https://site.com/hook\n     */\n    'notification.clicked'?: string;\n\n    /**\n     * This event occurs after a notification is intentionally dismissed by the user (clicking the notification body or one of the notification action buttons does not trigger the dismissed webhook),\n     * after a group of notifications are all dismissed (with this notification as part of that group), or after a notification expires on its own time and disappears. This event is supported on Chrome only.\n     * @example https://site.com/hook\n     */\n    'notification.dismissed'?: string;\n\n    /**\n     * This event occurs after a notification is displayed.\n     * @example https://site.com/hook\n     */\n    'notification.willDisplay'?: string;\n  };\n  autoResubscribe?: boolean;\n  autoRegister?: boolean;\n  notificationClickHandlerMatch?: string;\n  notificationClickHandlerAction?: string;\n  path?: string;\n  serviceWorkerParam?: { scope: string };\n  serviceWorkerPath?: string;\n  serviceWorkerOverrideForTypical?: boolean;\n  serviceWorkerUpdaterPath?: string;\n  allowLocalhostAsSecureOrigin?: boolean;\n  [key: string]: any;\n}\n\nexport interface IOneSignalOneSignal {\n\tSlidedown: IOneSignalSlidedown;\n\tNotifications: IOneSignalNotifications;\n\tSession: IOneSignalSession;\n\tUser: IOneSignalUser;\n\tDebug: IOneSignalDebug;\n\tlogin(externalId: string, jwtToken?: string): Promise<void>;\n\tlogout(): Promise<void>;\n\tinit(options: IInitObject): Promise<void>;\n\tsetConsentGiven(consent: boolean): Promise<void>;\n\tsetConsentRequired(requiresConsent: boolean): Promise<void>;\n}\nexport interface IOneSignalNotifications {\n\tpermissionNative: NotificationPermission;\n\tpermission: boolean;\n\tsetDefaultUrl(url: string): Promise<void>;\n\tsetDefaultTitle(title: string): Promise<void>;\n\tisPushSupported(): boolean;\n\trequestPermission(): Promise<void>;\n\taddEventListener<K extends NotificationEventName>(event: K, listener: (obj: NotificationEventTypeMap[K]) => void): void;\n\tremoveEventListener<K extends NotificationEventName>(event: K, listener: (obj: NotificationEventTypeMap[K]) => void): void;\n}\nexport interface IOneSignalSlidedown {\n\tpromptPush(options?: AutoPromptOptions): Promise<void>;\n\tpromptPushCategories(options?: AutoPromptOptions): Promise<void>;\n\tpromptSms(options?: AutoPromptOptions): Promise<void>;\n\tpromptEmail(options?: AutoPromptOptions): Promise<void>;\n\tpromptSmsAndEmail(options?: AutoPromptOptions): Promise<void>;\n\taddEventListener(event: SlidedownEventName, listener: (wasShown: boolean) => void): void;\n\tremoveEventListener(event: SlidedownEventName, listener: (wasShown: boolean) => void): void;\n}\nexport interface IOneSignalDebug {\n\tsetLogLevel(logLevel: string): void;\n}\nexport interface IOneSignalSession {\n\tsendOutcome(outcomeName: string, outcomeWeight?: number): Promise<void>;\n\tsendUniqueOutcome(outcomeName: string): Promise<void>;\n}\nexport interface IOneSignalUser {\n\tonesignalId: string | undefined;\n\texternalId: string | undefined;\n\tPushSubscription: IOneSignalPushSubscription;\n\taddAlias(label: string, id: string): void;\n\taddAliases(aliases: { [key: string]: string }): void;\n\tremoveAlias(label: string): void;\n\tremoveAliases(labels: string[]): void;\n\taddEmail(email: string): void;\n\tremoveEmail(email: string): void;\n\taddSms(smsNumber: string): void;\n\tremoveSms(smsNumber: string): void;\n\taddTag(key: string, value: string): void;\n\taddTags(tags: { [key: string]: string }): void;\n\tremoveTag(key: string): void;\n\tremoveTags(keys: string[]): void;\n\tgetTags(): { [key: string]: string };\n\taddEventListener(event: 'change', listener: (change: UserChangeEvent) => void): void;\n\tremoveEventListener(event: 'change', listener: (change: UserChangeEvent) => void): void;\n\tsetLanguage(language: string): void;\n\tgetLanguage(): string;\n}\nexport interface IOneSignalPushSubscription {\n\tid: string | null | undefined;\n\ttoken: string | null | undefined;\n\toptedIn: boolean | undefined;\n\toptIn(): Promise<void>;\n\toptOut(): Promise<void>;\n\taddEventListener(event: 'change', listener: (change: SubscriptionChangeEvent) => void): void;\n\tremoveEventListener(event: 'change', listener: (change: SubscriptionChangeEvent) => void): void;\n}\nfunction oneSignalLogin(externalId: string, jwtToken?: string): Promise<void> {\n  return new Promise((resolve, reject) => {\n    if (isOneSignalScriptFailed) {\n      reject(new Error('OneSignal script failed to load.'));\n      return;\n    }\n\n    try {\n      window.OneSignalDeferred?.push((OneSignal: IOneSignalOneSignal) => {\n        OneSignal.login(externalId, jwtToken).then(() => resolve())\n          .catch((error: any) => reject(error));\n      });\n    } catch (error) {\n      reject(error);\n    }\n  });\n}\nfunction oneSignalLogout(): Promise<void> {\n  return new Promise((resolve, reject) => {\n    if (isOneSignalScriptFailed) {\n      reject(new Error('OneSignal script failed to load.'));\n      return;\n    }\n\n    try {\n      window.OneSignalDeferred?.push((OneSignal: IOneSignalOneSignal) => {\n        OneSignal.logout().then(() => resolve())\n          .catch((error: any) => reject(error));\n      });\n    } catch (error) {\n      reject(error);\n    }\n  });\n}\nfunction oneSignalSetConsentGiven(consent: boolean): Promise<void> {\n  return new Promise((resolve, reject) => {\n    if (isOneSignalScriptFailed) {\n      reject(new Error('OneSignal script failed to load.'));\n      return;\n    }\n\n    try {\n      window.OneSignalDeferred?.push((OneSignal: IOneSignalOneSignal) => {\n        OneSignal.setConsentGiven(consent).then(() => resolve())\n          .catch((error: any) => reject(error));\n      });\n    } catch (error) {\n      reject(error);\n    }\n  });\n}\nfunction oneSignalSetConsentRequired(requiresConsent: boolean): Promise<void> {\n  return new Promise((resolve, reject) => {\n    if (isOneSignalScriptFailed) {\n      reject(new Error('OneSignal script failed to load.'));\n      return;\n    }\n\n    try {\n      window.OneSignalDeferred?.push((OneSignal: IOneSignalOneSignal) => {\n        OneSignal.setConsentRequired(requiresConsent).then(() => resolve())\n          .catch((error: any) => reject(error));\n      });\n    } catch (error) {\n      reject(error);\n    }\n  });\n}\nfunction slidedownPromptPush(options?: AutoPromptOptions): Promise<void> {\n  return new Promise((resolve, reject) => {\n    if (isOneSignalScriptFailed) {\n      reject(new Error('OneSignal script failed to load.'));\n      return;\n    }\n\n    try {\n      window.OneSignalDeferred?.push((OneSignal: IOneSignalOneSignal) => {\n        OneSignal.Slidedown.promptPush(options).then(() => resolve())\n          .catch((error: any) => reject(error));\n      });\n    } catch (error) {\n      reject(error);\n    }\n  });\n}\nfunction slidedownPromptPushCategories(options?: AutoPromptOptions): Promise<void> {\n  return new Promise((resolve, reject) => {\n    if (isOneSignalScriptFailed) {\n      reject(new Error('OneSignal script failed to load.'));\n      return;\n    }\n\n    try {\n      window.OneSignalDeferred?.push((OneSignal: IOneSignalOneSignal) => {\n        OneSignal.Slidedown.promptPushCategories(options).then(() => resolve())\n          .catch((error: any) => reject(error));\n      });\n    } catch (error) {\n      reject(error);\n    }\n  });\n}\nfunction slidedownPromptSms(options?: AutoPromptOptions): Promise<void> {\n  return new Promise((resolve, reject) => {\n    if (isOneSignalScriptFailed) {\n      reject(new Error('OneSignal script failed to load.'));\n      return;\n    }\n\n    try {\n      window.OneSignalDeferred?.push((OneSignal: IOneSignalOneSignal) => {\n        OneSignal.Slidedown.promptSms(options).then(() => resolve())\n          .catch((error: any) => reject(error));\n      });\n    } catch (error) {\n      reject(error);\n    }\n  });\n}\nfunction slidedownPromptEmail(options?: AutoPromptOptions): Promise<void> {\n  return new Promise((resolve, reject) => {\n    if (isOneSignalScriptFailed) {\n      reject(new Error('OneSignal script failed to load.'));\n      return;\n    }\n\n    try {\n      window.OneSignalDeferred?.push((OneSignal: IOneSignalOneSignal) => {\n        OneSignal.Slidedown.promptEmail(options).then(() => resolve())\n          .catch((error: any) => reject(error));\n      });\n    } catch (error) {\n      reject(error);\n    }\n  });\n}\nfunction slidedownPromptSmsAndEmail(options?: AutoPromptOptions): Promise<void> {\n  return new Promise((resolve, reject) => {\n    if (isOneSignalScriptFailed) {\n      reject(new Error('OneSignal script failed to load.'));\n      return;\n    }\n\n    try {\n      window.OneSignalDeferred?.push((OneSignal: IOneSignalOneSignal) => {\n        OneSignal.Slidedown.promptSmsAndEmail(options).then(() => resolve())\n          .catch((error: any) => reject(error));\n      });\n    } catch (error) {\n      reject(error);\n    }\n  });\n}\nfunction slidedownAddEventListener(event: SlidedownEventName, listener: (wasShown: boolean) => void): void {\n  \n  window.OneSignalDeferred?.push((OneSignal: IOneSignalOneSignal) => {\n    OneSignal.Slidedown.addEventListener(event, listener);\n  });\n  \n}\nfunction slidedownRemoveEventListener(event: SlidedownEventName, listener: (wasShown: boolean) => void): void {\n  \n  window.OneSignalDeferred?.push((OneSignal: IOneSignalOneSignal) => {\n    OneSignal.Slidedown.removeEventListener(event, listener);\n  });\n  \n}\nfunction notificationsSetDefaultUrl(url: string): Promise<void> {\n  return new Promise((resolve, reject) => {\n    if (isOneSignalScriptFailed) {\n      reject(new Error('OneSignal script failed to load.'));\n      return;\n    }\n\n    try {\n      window.OneSignalDeferred?.push((OneSignal: IOneSignalOneSignal) => {\n        OneSignal.Notifications.setDefaultUrl(url).then(() => resolve())\n          .catch((error: any) => reject(error));\n      });\n    } catch (error) {\n      reject(error);\n    }\n  });\n}\nfunction notificationsSetDefaultTitle(title: string): Promise<void> {\n  return new Promise((resolve, reject) => {\n    if (isOneSignalScriptFailed) {\n      reject(new Error('OneSignal script failed to load.'));\n      return;\n    }\n\n    try {\n      window.OneSignalDeferred?.push((OneSignal: IOneSignalOneSignal) => {\n        OneSignal.Notifications.setDefaultTitle(title).then(() => resolve())\n          .catch((error: any) => reject(error));\n      });\n    } catch (error) {\n      reject(error);\n    }\n  });\n}\nfunction notificationsRequestPermission(): Promise<void> {\n  return new Promise((resolve, reject) => {\n    if (isOneSignalScriptFailed) {\n      reject(new Error('OneSignal script failed to load.'));\n      return;\n    }\n\n    try {\n      window.OneSignalDeferred?.push((OneSignal: IOneSignalOneSignal) => {\n        OneSignal.Notifications.requestPermission().then(() => resolve())\n          .catch((error: any) => reject(error));\n      });\n    } catch (error) {\n      reject(error);\n    }\n  });\n}\nfunction notificationsAddEventListener<K extends NotificationEventName>(event: K, listener: (obj: NotificationEventTypeMap[K]) => void): void {\n  \n  window.OneSignalDeferred?.push((OneSignal: IOneSignalOneSignal) => {\n    OneSignal.Notifications.addEventListener(event, listener);\n  });\n  \n}\nfunction notificationsRemoveEventListener<K extends NotificationEventName>(event: K, listener: (obj: NotificationEventTypeMap[K]) => void): void {\n  \n  window.OneSignalDeferred?.push((OneSignal: IOneSignalOneSignal) => {\n    OneSignal.Notifications.removeEventListener(event, listener);\n  });\n  \n}\nfunction sessionSendOutcome(outcomeName: string, outcomeWeight?: number): Promise<void> {\n  return new Promise((resolve, reject) => {\n    if (isOneSignalScriptFailed) {\n      reject(new Error('OneSignal script failed to load.'));\n      return;\n    }\n\n    try {\n      window.OneSignalDeferred?.push((OneSignal: IOneSignalOneSignal) => {\n        OneSignal.Session.sendOutcome(outcomeName, outcomeWeight).then(() => resolve())\n          .catch((error: any) => reject(error));\n      });\n    } catch (error) {\n      reject(error);\n    }\n  });\n}\nfunction sessionSendUniqueOutcome(outcomeName: string): Promise<void> {\n  return new Promise((resolve, reject) => {\n    if (isOneSignalScriptFailed) {\n      reject(new Error('OneSignal script failed to load.'));\n      return;\n    }\n\n    try {\n      window.OneSignalDeferred?.push((OneSignal: IOneSignalOneSignal) => {\n        OneSignal.Session.sendUniqueOutcome(outcomeName).then(() => resolve())\n          .catch((error: any) => reject(error));\n      });\n    } catch (error) {\n      reject(error);\n    }\n  });\n}\nfunction userAddAlias(label: string, id: string): void {\n  \n  window.OneSignalDeferred?.push((OneSignal: IOneSignalOneSignal) => {\n    OneSignal.User.addAlias(label, id);\n  });\n  \n}\nfunction userAddAliases(aliases: { [key: string]: string }): void {\n  \n  window.OneSignalDeferred?.push((OneSignal: IOneSignalOneSignal) => {\n    OneSignal.User.addAliases(aliases);\n  });\n  \n}\nfunction userRemoveAlias(label: string): void {\n  \n  window.OneSignalDeferred?.push((OneSignal: IOneSignalOneSignal) => {\n    OneSignal.User.removeAlias(label);\n  });\n  \n}\nfunction userRemoveAliases(labels: string[]): void {\n  \n  window.OneSignalDeferred?.push((OneSignal: IOneSignalOneSignal) => {\n    OneSignal.User.removeAliases(labels);\n  });\n  \n}\nfunction userAddEmail(email: string): void {\n  \n  window.OneSignalDeferred?.push((OneSignal: IOneSignalOneSignal) => {\n    OneSignal.User.addEmail(email);\n  });\n  \n}\nfunction userRemoveEmail(email: string): void {\n  \n  window.OneSignalDeferred?.push((OneSignal: IOneSignalOneSignal) => {\n    OneSignal.User.removeEmail(email);\n  });\n  \n}\nfunction userAddSms(smsNumber: string): void {\n  \n  window.OneSignalDeferred?.push((OneSignal: IOneSignalOneSignal) => {\n    OneSignal.User.addSms(smsNumber);\n  });\n  \n}\nfunction userRemoveSms(smsNumber: string): void {\n  \n  window.OneSignalDeferred?.push((OneSignal: IOneSignalOneSignal) => {\n    OneSignal.User.removeSms(smsNumber);\n  });\n  \n}\nfunction userAddTag(key: string, value: string): void {\n  \n  window.OneSignalDeferred?.push((OneSignal: IOneSignalOneSignal) => {\n    OneSignal.User.addTag(key, value);\n  });\n  \n}\nfunction userAddTags(tags: { [key: string]: string }): void {\n  \n  window.OneSignalDeferred?.push((OneSignal: IOneSignalOneSignal) => {\n    OneSignal.User.addTags(tags);\n  });\n  \n}\nfunction userRemoveTag(key: string): void {\n  \n  window.OneSignalDeferred?.push((OneSignal: IOneSignalOneSignal) => {\n    OneSignal.User.removeTag(key);\n  });\n  \n}\nfunction userRemoveTags(keys: string[]): void {\n  \n  window.OneSignalDeferred?.push((OneSignal: IOneSignalOneSignal) => {\n    OneSignal.User.removeTags(keys);\n  });\n  \n}\nfunction userGetTags(): { [key: string]: string } {\n  let retVal: { [key: string]: string };\n  window.OneSignalDeferred?.push((OneSignal: IOneSignalOneSignal) => {\n    retVal = OneSignal.User.getTags();\n  });\n  return retVal;\n}\nfunction userAddEventListener(event: 'change', listener: (change: UserChangeEvent) => void): void {\n  \n  window.OneSignalDeferred?.push((OneSignal: IOneSignalOneSignal) => {\n    OneSignal.User.addEventListener(event, listener);\n  });\n  \n}\nfunction userRemoveEventListener(event: 'change', listener: (change: UserChangeEvent) => void): void {\n  \n  window.OneSignalDeferred?.push((OneSignal: IOneSignalOneSignal) => {\n    OneSignal.User.removeEventListener(event, listener);\n  });\n  \n}\nfunction userSetLanguage(language: string): void {\n  \n  window.OneSignalDeferred?.push((OneSignal: IOneSignalOneSignal) => {\n    OneSignal.User.setLanguage(language);\n  });\n  \n}\nfunction userGetLanguage(): string {\n  let retVal: string;\n  window.OneSignalDeferred?.push((OneSignal: IOneSignalOneSignal) => {\n    retVal = OneSignal.User.getLanguage();\n  });\n  return retVal;\n}\nfunction pushSubscriptionOptIn(): Promise<void> {\n  return new Promise((resolve, reject) => {\n    if (isOneSignalScriptFailed) {\n      reject(new Error('OneSignal script failed to load.'));\n      return;\n    }\n\n    try {\n      window.OneSignalDeferred?.push((OneSignal: IOneSignalOneSignal) => {\n        OneSignal.User.PushSubscription.optIn().then(() => resolve())\n          .catch((error: any) => reject(error));\n      });\n    } catch (error) {\n      reject(error);\n    }\n  });\n}\nfunction pushSubscriptionOptOut(): Promise<void> {\n  return new Promise((resolve, reject) => {\n    if (isOneSignalScriptFailed) {\n      reject(new Error('OneSignal script failed to load.'));\n      return;\n    }\n\n    try {\n      window.OneSignalDeferred?.push((OneSignal: IOneSignalOneSignal) => {\n        OneSignal.User.PushSubscription.optOut().then(() => resolve())\n          .catch((error: any) => reject(error));\n      });\n    } catch (error) {\n      reject(error);\n    }\n  });\n}\nfunction pushSubscriptionAddEventListener(event: 'change', listener: (change: SubscriptionChangeEvent) => void): void {\n  \n  window.OneSignalDeferred?.push((OneSignal: IOneSignalOneSignal) => {\n    OneSignal.User.PushSubscription.addEventListener(event, listener);\n  });\n  \n}\nfunction pushSubscriptionRemoveEventListener(event: 'change', listener: (change: SubscriptionChangeEvent) => void): void {\n  \n  window.OneSignalDeferred?.push((OneSignal: IOneSignalOneSignal) => {\n    OneSignal.User.PushSubscription.removeEventListener(event, listener);\n  });\n  \n}\nfunction debugSetLogLevel(logLevel: string): void {\n  \n  window.OneSignalDeferred?.push((OneSignal: IOneSignalOneSignal) => {\n    OneSignal.Debug.setLogLevel(logLevel);\n  });\n  \n}\nconst PushSubscriptionNamespace: IOneSignalPushSubscription = {\n\tget id(): string | null | undefined { return window.OneSignal?.User?.PushSubscription?.id; },\n\tget token(): string | null | undefined { return window.OneSignal?.User?.PushSubscription?.token; },\n\tget optedIn(): boolean | undefined { return window.OneSignal?.User?.PushSubscription?.optedIn; },\n\toptIn: pushSubscriptionOptIn,\n\toptOut: pushSubscriptionOptOut,\n\taddEventListener: pushSubscriptionAddEventListener,\n\tremoveEventListener: pushSubscriptionRemoveEventListener,\n};\n\nconst UserNamespace: IOneSignalUser = {\n\tget onesignalId(): string | undefined { return window.OneSignal?.User?.onesignalId; },\n\tget externalId(): string | undefined { return window.OneSignal?.User?.externalId; },\n\taddAlias: userAddAlias,\n\taddAliases: userAddAliases,\n\tremoveAlias: userRemoveAlias,\n\tremoveAliases: userRemoveAliases,\n\taddEmail: userAddEmail,\n\tremoveEmail: userRemoveEmail,\n\taddSms: userAddSms,\n\tremoveSms: userRemoveSms,\n\taddTag: userAddTag,\n\taddTags: userAddTags,\n\tremoveTag: userRemoveTag,\n\tremoveTags: userRemoveTags,\n\tgetTags: userGetTags,\n\taddEventListener: userAddEventListener,\n\tremoveEventListener: userRemoveEventListener,\n\tsetLanguage: userSetLanguage,\n\tgetLanguage: userGetLanguage,\n\tPushSubscription: PushSubscriptionNamespace,\n};\n\nconst SessionNamespace: IOneSignalSession = {\n\tsendOutcome: sessionSendOutcome,\n\tsendUniqueOutcome: sessionSendUniqueOutcome,\n};\n\nconst DebugNamespace: IOneSignalDebug = {\n\tsetLogLevel: debugSetLogLevel,\n};\n\nconst SlidedownNamespace: IOneSignalSlidedown = {\n\tpromptPush: slidedownPromptPush,\n\tpromptPushCategories: slidedownPromptPushCategories,\n\tpromptSms: slidedownPromptSms,\n\tpromptEmail: slidedownPromptEmail,\n\tpromptSmsAndEmail: slidedownPromptSmsAndEmail,\n\taddEventListener: slidedownAddEventListener,\n\tremoveEventListener: slidedownRemoveEventListener,\n};\n\nconst NotificationsNamespace: IOneSignalNotifications = {\n\tget permissionNative(): NotificationPermission { return window.OneSignal?.Notifications?.permissionNative ?? 'default'; },\n\tget permission(): boolean { return window.OneSignal?.Notifications?.permission ?? false; },\n\tsetDefaultUrl: notificationsSetDefaultUrl,\n\tsetDefaultTitle: notificationsSetDefaultTitle,\n\tisPushSupported,\n\trequestPermission: notificationsRequestPermission,\n\taddEventListener: notificationsAddEventListener,\n\tremoveEventListener: notificationsRemoveEventListener,\n};\n\nconst OneSignalNamespace: IOneSignalOneSignal = {\n\tlogin: oneSignalLogin,\n\tlogout: oneSignalLogout,\n\tinit,\n\tsetConsentGiven: oneSignalSetConsentGiven,\n\tsetConsentRequired: oneSignalSetConsentRequired,\n\tSlidedown: SlidedownNamespace,\n\tNotifications: NotificationsNamespace,\n\tSession: SessionNamespace,\n\tUser: UserNamespace,\n\tDebug: DebugNamespace,\n};\n\nconst OneSignal = OneSignalNamespace;\nexport default OneSignal;\n"],"names":["ONESIGNAL_SDK_ID","ONE_SIGNAL_SCRIPT_SRC","isOneSignalInitialized","isOneSignalScriptFailed","addSDKScript","handleOnError","script","isPushNotificationsSupported","supportsVapidPush","supportsSafariPush","isMacOSSafariInIframe","isPushSupported","init","options","resolve","reject","_a","OneSignal","oneSignalLogin","externalId","jwtToken","error","oneSignalLogout","oneSignalSetConsentGiven","consent","oneSignalSetConsentRequired","requiresConsent","slidedownPromptPush","slidedownPromptPushCategories","slidedownPromptSms","slidedownPromptEmail","slidedownPromptSmsAndEmail","slidedownAddEventListener","event","listener","slidedownRemoveEventListener","notificationsSetDefaultUrl","url","notificationsSetDefaultTitle","title","notificationsRequestPermission","notificationsAddEventListener","notificationsRemoveEventListener","sessionSendOutcome","outcomeName","outcomeWeight","sessionSendUniqueOutcome","userAddAlias","label","id","userAddAliases","aliases","userRemoveAlias","userRemoveAliases","labels","userAddEmail","email","userRemoveEmail","userAddSms","smsNumber","userRemoveSms","userAddTag","key","value","userAddTags","tags","userRemoveTag","userRemoveTags","keys","userGetTags","retVal","userAddEventListener","userRemoveEventListener","userSetLanguage","language","userGetLanguage","pushSubscriptionOptIn","pushSubscriptionOptOut","pushSubscriptionAddEventListener","pushSubscriptionRemoveEventListener","debugSetLogLevel","logLevel","PushSubscriptionNamespace","_b","_c","UserNamespace","SessionNamespace","DebugNamespace","SlidedownNamespace","NotificationsNamespace","OneSignalNamespace"],"mappings":"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"}